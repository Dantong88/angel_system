#
# System configuration to run the ANGEL system for the May demo meeting.
#

name: 2023-05-demo-berkeley
root: <%= ENV["ANGEL_WORKSPACE_DIR"] %>

# Optional tmux socket
# socket_name: foo

# Note that the pre and post options have been deprecated and will be replaced by
# project hooks.

# Project hooks

# Runs on project start, always
# on_project_start: command
on_project_start: |
  export ROS_NAMESPACE=${ROS_NAMESPACE:-/debug}
  export HL2_IP=${HL2_IP:-192.168.1.101}
  export CONFIG_DIR=${ANGEL_WORKSPACE_DIR}/config
  export NODE_CONFIG_DIR=${ANGEL_WORKSPACE_DIR}/src/angel_system_nodes/configs
  export MODEL_DIR=${ANGEL_WORKSPACE_DIR}/model_files

# Run on project start, the first time
# on_project_first_start: command

# Run on project start, after the first time
# on_project_restart: command

# Run on project exit ( detaching from tmux session )
# on_project_exit: command

# Run on project stop
# on_project_stop: command

# Runs in each window and pane before window/pane specific commands. Useful for setting up interpreter versions.
# pre_window: rbenv shell 2.0.0-p247

# Pass command line options to tmux. Useful for specifying a different tmux.conf.
# tmux_options: -f ~/.tmux.mac.conf
tmux_options: -f <%= ENV["ANGEL_WORKSPACE_DIR"] %>/tmux/tmux.conf

windows:
  - datahub: ros2 run ros_tcp_endpoint default_server_endpoint --ros-args
      -r __ns:=${ROS_NAMESPACE}
      -p ROS_IP:=0.0.0.0
  - hl2ss_bridge: ros2 run angel_system_nodes hl2ss_ros_bridge --ros-args
      -r __ns:=${ROS_NAMESPACE}
      -p ip_addr:=${HL2_IP}
      -p image_topic:=PVFramesBGR
      -p hand_pose_topic:=HandJointPoseData
      -p audio_topic:=HeadsetAudioData
      -p sm_topic:=SpatialMapData
      -p head_pose_topic:=HeadsetPoseData
      -p pv_width:=1280
      -p pv_height:=720
      -p pv_framerate:=30
      -p sm_freq:=5

  # Visualize Images being output from the headset
  - rqt_pv_images: rqt -s rqt_image_view/ImageView
      --args ${ROS_NAMESPACE}/PVFramesBGR
      --ros-args -p _image_transport:=raw

  - object_detector: ros2 run angel_system_nodes berkeley_object_detector --ros-args
      -r __ns:=${ROS_NAMESPACE}
      -p image_topic:=PVFramesBGR
      -p det_topic:=ObjectDetections2d
      -p det_conf_threshold:=0.7
      -p model_config:=angel_system/berkeley/configs/MC50-InstanceSegmentation/mask_rcnn_R_101_FPN_1x_demo.yaml
      -p cuda_device_id:=0

  - activity_classifier: ros2 run angel_system_nodes activity_from_obj_dets_classifier --ros-args
      -r __ns:=${ROS_NAMESPACE}
      -p det_topic:=ObjectDetections2d
      -p act_topic:=ActivityDetections
      -p classifier_file:=nothing.txt

  - task_monitor: ros2 run angel_system_nodes task_monitor_v2 --ros-args
      -r __ns:=${ROS_NAMESPACE}
      -p det_topic:=ActivityDetections
      -p config_file:=${CONFIG_DIR}/tasks/task_steps_config-recipe_coffee_trimmed_v3_allows_skip.yaml
      -p task_state_topic:=TaskUpdates
      -p task_error_topic:=TaskErrors
      -p query_task_graph_topic:=query_task_graph
      -p step_complete_threshold:=0.5
      -p sys_cmd_topic:=SystemCommands

  # Currently hard-coded to use the /debug ROS namespace.
  - engineering_ui_websocket: ros2 launch rosbridge_server rosbridge_websocket_launch.xml port:=9090
  - engineering_ui_server: node src/angel_utils/demo_ui/index.js
      --namespace=${ROS_NAMESPACE}
      --image_topic=pv_image_detections_2d/compressed
      --query_task_graph_topic=query_task_graph
      --task_updates_topic=TaskUpdates
      --activity_detections_topic=ActivityDetections
      --task_errors_topic=TaskErrors

  - feedback_generator: ros2 run angel_system_nodes feedback_generator --ros-args
      -r __ns:=${ROS_NAMESPACE}
      -p activity_detector_topic:=ActivityDetections
      -p object_detection_topic:=ObjectDetections3d
      -p task_monitor_topic:=TaskUpdates
      -p arui_update_topic:=AruiUpdates
      -p interp_user_intent_topic:=UserIntentPredicted
